# -*- coding: utf-8 -*-
"""PredictionInference_IST.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10PtpzPgrXvjT3hHomQq1BNdSrf-3n--0

<img src="https://github.com/RSandAI/Comprehensive-YOLO-Airplane-Detection/blob/main/assets/image.png" height=450 width=1280 alt=""/>

<br>

##  **Introduction**

In the realm of Geographic Information Systems (GIS), the integration of artificial intelligence (AI) has opened up new frontiers in data analysis and interpretation. Leveraging AI techniques, particularly deep learning, offers unprecedented opportunities to extract meaningful insights from geospatial data. In this study, we explore the application of advanced AI algorithms in the context of GIS, focusing on urban area monitoring around Istanbul Airport in Istanbul, Turkey.

<br>

###  **Background**

Istanbul Airport (IST), located in the bustling city of Istanbul, serves as a critical hub for air transportation in Turkey and the region. With its strategic importance, the airport area presents unique challenges and opportunities for urban planning, infrastructure management, and environmental monitoring. Traditional GIS approaches often struggle to keep pace with the dynamic nature of such areas. The integration of AI, particularly deep learning, holds promise in revolutionizing the analysis and interpretation of high-resolution satellite imagery for enhanced decision-making.

<br>

###  **InferenceVision Library**

InferenceVision calculates the geographic coordinates (latitude and longitude) of detected objects relative to a given bounding polygon. This involves converting normalized center coordinates of objects within the bounding polygon to precise geographic coordinates. For more information, please check:

<br>

- **InferenceVision Website:** [InferenceVision](https://doguilmak.github.io/InferenceVision/)

- **InferenceVision GitHub:** [InferenceVision GitHub](https://github.com/doguilmak/InferenceVision)

<br>

Make sure your runtime is **GPU** (_not_ CPU or TPU). And if it is an option, make sure you are using _Python 3_. You can select these settings by going to `Runtime -> Change runtime type -> Select the above mentioned settings and then press SAVE`.

## **0. Initial Steps**

### **0.1. Download Libraries**
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/doguilmak/InferenceVision.git
# %cd InferenceVision
!pip install -r /content/InferenceVision/requirements.txt -q

"""### **0.2. Import Libraries and Connect to Drive**"""

from google.colab import drive
drive.mount('/gdrive')

import os
import pandas as pd
import numpy as np
import time

from inference_vision import InferenceVision

"""### **0.3. Check GPU and InferenceVision Version**"""

!nvidia-smi

print(f"InferenceVision version: {InferenceVision.VERSION}")

"""## **1. Implement YOLOv8 Model Weights**

### **1.1. Define Model Path**
"""

# @markdown Define `MODEL_PATH` and `IMAGE_PATH`.

MODEL_PATH = '/gdrive/MyDrive/best.pt' #@param {type:"string"}
IMAGE_PATH = '/gdrive/MyDrive/IST.tif' #@param {type:"string"}

"""### **1.2. Make Predictions from Image**


"""

start = time.time()

iv = InferenceVision(tif_path=IMAGE_PATH,   # Path to your image.
                     model_path=MODEL_PATH) # Path to your model.

iv.process_image(build_csv=True, csv_filename="output.csv")

end = time.time()
elapsed_time = end - start

print(f"\nElapsed Time: {elapsed_time}s")

df = pd.read_csv('/content/InferenceVision/output.csv')
df

"""## **2. Filtering Data**

### **2.1. Filter by Confidence Score**
"""

df = pd.read_csv('/content/InferenceVision/output.csv')
df.head()

df[(df['Confidence Score'] >= 0.5)].head()

planes_df_threshold_05 = df[(df['Confidence Score'] >= 0.5)]

planes_df_threshold_05.to_csv('planes_df_threshold_05.csv', index=False)

"""### **2.2. Export CSV Files**"""

from google.colab import files

files.download('/content/InferenceVision/output.csv')
files.download('/content/InferenceVision/planes_df_threshold_05.csv')

"""<br>

##  **Conclusion**

In this study, we have demonstrated the effectiveness of leveraging AI, specifically the YOLOv8x model, in enhancing geospatial intelligence for urban area monitoring around Istanbul Airport in Istanbul, Turkey. By utilizing the  **InferenceVision**, which provides high-resolution satellite imagery and annotations of aircraft, we developed a specialized tool capable of accurately calculating various features within the airport area with geographical coordinates. Our findings showcase the transformative potential of AI in the field of Geographic Information Systems (GIS), particularly in urban planning, infrastructure management, and environmental monitoring. The integration of deep learning algorithms enables the automation of feature detection and classification, significantly improving the efficiency and accuracy of analyses in dynamic urban settings.



<br>
"""

from datetime import datetime
print(f"Changes have been made to the project on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")